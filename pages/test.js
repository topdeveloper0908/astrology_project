import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import { useForm } from "react-hook-form";
import { Origin, Horoscope } from "circular-natal-horoscope-js";
import countries from "../list.json";

export default function Home() {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const [inital, setInital] = useState({
    year: "",
  });
  const [result, setResult] = useState({ sun: "", moon: "", rising: "" });
  const [location, setLocation] = useState({ latitude: 40, longitude: -70 }); // Default- NewYork
  const onSubmit = (data) => {
    const a = new Origin({
      year: data.year,
      month: data.month - 1, // 0 = January, 11 = December!
      date: data.day,
      hour: data.hour,
      minute: data.min,
      latitude: location.latitude,
      longitude: location.longitude,
    });
    const horoscope = new Horoscope({
      origin: a,
      houseSystem: "whole-sign",
      zodiac: "tropical",
      aspectPoints: ["bodies", "points", "angles"],
      aspectWithPoints: ["bodies", "points", "angles"],
      aspectTypes: ["major", "minor"],
      customOrbs: customOrbs,
      language: "en",
    });
    console.log(horoscope.Angles);
    console.log(horoscope.CelestialBodies);
    setResult({
      sun: horoscope.CelestialBodies.sun.Sign.label,
      moon: horoscope.CelestialBodies.moon.Sign.label,
      rising: horoscope.Angles.ascendant.Sign.label,
    });
  };
  const changeLatitude = (data) => {
    console.log(countries[data]);
    setLocation({
      latitude: countries[data].FIELD2,
      longitude: countries[data].FIELD3,
    });
  };

  const customOrbs = {
    conjunction: 8,
    opposition: 8,
    trine: 8,
    square: 7,
    sextile: 6,
    quincunx: 5,
    quintile: 1,
    septile: 1,
    "semi-square": 1,
    "semi-sextile": 1,
  };
  function refreshPage() {
    setInital({ year: "", month: "", day: "", hour: "", min: "" });
    setResult({ sun: "", moon: "", rising: "" });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="form main">
          <div className="content">
            <form
              id="zp-birthreport-form"
              className="check_birthday"
              onSubmit={handleSubmit(onSubmit)}
            >
              <div className="form-group">
                <div className="label">Year of birth</div>
                <div>
                  <input
                    type="number"
                    className="login-input"
                    name="year"
                    defaultValue={inital.year}
                    autoComplete="off"
                    min="1900"
                    max="2200"
                    required
                    {...register("year")}
                  />
                </div>
              </div>
              <div className="form-group">
                <div className="label">Month of birth</div>
                <div>
                  <input
                    type="number"
                    className="login-input"
                    name="month"
                    autoComplete="off"
                    defaultValue={inital.year}
                    min="1"
                    max="12"
                    required
                    {...register("month")}
                  />
                </div>
              </div>
              <div className="form-group">
                <div className="label">Day of birth</div>
                <div>
                  <input
                    type="number"
                    className="login-input"
                    name="day"
                    autoComplete="off"
                    defaultValue={inital.year}
                    min="1"
                    max="31"
                    required
                    {...register("day")}
                  />
                </div>
              </div>
              <div className="form-group">
                <div className="label">Local time of birth</div>
                <div className="birth-time">
                  <div>
                    <input
                      type="number"
                      className="login-input"
                      name="hours"
                      autoComplete="off"
                      defaultValue={inital.year}
                      min="0"
                      max="23"
                      {...register("hour")}
                      required
                    />
                    <label>h</label>
                  </div>
                  <div>
                    <input
                      type="number"
                      className="login-input"
                      name="minute"
                      autoComplete="off"
                      defaultValue={inital.year}
                      min="0"
                      max="59"
                      {...register("min")}
                      required
                    />
                    <label>min</label>
                  </div>
                </div>
              </div>
              <p id="zp-birthplace" style={{ paddingLeft: "2.4rem" }}>
                <label htmlFor="placein" className="zp-form-label">
                  Birth City
                </label>
                <select
                  name="placein"
                  id="placein"
                  onChange={(e) => changeLatitude(e.target.value)}
                >
                  {countries.map((item, index) => (
                    <option value={index} key={index}>
                      {item.FIELD4}
                    </option>
                  ))}
                </select>
              </p>
              <div className="form-button-group">
                <button type="submit" name="submit" id="zp-fetch-birthreport">
                  Submit
                </button>
              </div>
              <div className="divider"></div>
              <div className="form-group">
                <div className="label bg-blue">Sun sign</div>
                <div>
                  <input
                    type="text"
                    className="login-input"
                    name="sun_sign"
                    value={result.sun}
                    readOnly
                  />
                </div>
              </div>
              <div className="form-group">
                <div className="label bg-blue">Ascendant</div>
                <div>
                  <input
                    type="text"
                    className="login-input"
                    name="ascendant"
                    value={result.rising}
                    readOnly
                  />
                </div>
              </div>
              <div className="form-group">
                <div className="label bg-blue">Moon sign</div>
                <div>
                  <input
                    type="text"
                    className="login-input"
                    name="moon_sign"
                    value={result.moon}
                    readOnly
                  />
                </div>
              </div>
            </form>
          </div>
        </div>
      </main>
    </div>
  );
}
